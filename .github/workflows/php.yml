name: PHP Composer

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+"


permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: nanasess/setup-php@v3
      with:
        php-version: '7.4'
    - uses: actions/setup-node@v3

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Check composer version
      run: composer -V

    - name: Composer install
      run: composer install --no-dev --optimize-autoloader

    - name: NPM install
      run: npm install

    #- name: Theme build
    #  run: npm run theme:build

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test

    - name: Package release
      uses: a7ul/tar-action@v1.1.0
      id: compress
      with:
        command: c
        cwd: ${{ github.workspace }}
#        files: |
          #./.babelrc.js
          #./.commitlintrc.js
          #./.czrz
          #./.eslintrc.js
          #./.husky
          #./.lintstagedrc.js
          #./.prettierrc.js
          #./.versionrc.js
          #./bin
          #./config
          #./drush
          #./gulpfile.babel.js
          #./load.environment.php
          #./scripts
          #./templates
        files: |
          ./composer.json
          ./composer.lock
          ./node_modules
          ./package-lock.json
          ./package.json
          ./vendor
          ./web
          
        outPath: ghtest.tar.gz

    - name: Upload release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "ghtest.tar.gz"
        body: "body"
        generateReleaseNotes: true
        token: ${{ secrets.GITHUB_TOKEN }}
